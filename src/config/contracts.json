{
  "network": "polygon-amoy",
  "chainId": 80002,
  "dexAddress": "0x7584970caB7A1E79b797Ec5A46679F048c8B330b",
  "reputationAddress": "0xf77AA837587dc07FE822C5CB0B3D5BF5294CaB42",
  "tokens": {
    "TIK": "0xf0dc4aa8063810B4116091371a74D55856c9Fa87",
    "TAK": "0x9222709Ea62bcD6F7E17281FC10ECE96DC2CAEd3",
    "TOE": "0xfe8aad1E21b682ef70eA1764D80A9BeBcF1a2dbc"
  },
  "pairs": [
    {
      "name": "TIK-TAK",
      "token0": "0xf0dc4aa8063810B4116091371a74D55856c9Fa87",
      "token1": "0x9222709Ea62bcD6F7E17281FC10ECE96DC2CAEd3",
      "pairKey": "0x13e5694a3ef17a256b3864b94cbb454aaccf8e12d74fd7fe54194fa0f5c50f4d",
      "lpToken": "0xa732073DFCFF3AEB05Df4313354b6faa1b90B4A8"
    },
    {
      "name": "TIK-TOE",
      "token0": "0xf0dc4aa8063810B4116091371a74D55856c9Fa87",
      "token1": "0xfe8aad1E21b682ef70eA1764D80A9BeBcF1a2dbc",
      "pairKey": "0x483ffac07c5ffe524300b3d0c6d3898c7ed4b04139e04ff93e26972f7d77cd33",
      "lpToken": "0x1a07a5dd6a8851A0b493b1ED6E4269CEE932B693"
    },
    {
      "name": "TAK-TOE",
      "token0": "0x9222709Ea62bcD6F7E17281FC10ECE96DC2CAEd3",
      "token1": "0xfe8aad1E21b682ef70eA1764D80A9BeBcF1a2dbc",
      "pairKey": "0xd6556aa6611b8495549abd090f49e06fd7935af3517237e7a22cf61b3b570e25",
      "lpToken": "0xe5B77c5d9Ad7b03499274d3B48BF4DBd19F54e49"
    }
  ],
  "abis": {
    "TikTakDex": [
      "constructor()",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "error SafeERC20FailedOperation(address token)",
      "event FeeAdjusted(address indexed user, uint256 reputation, uint256 feePercent)",
      "event LiquidityAdded(address indexed pairKey, address indexed user, uint256 amount0, uint256 amount1, uint256 lpAmount)",
      "event LiquidityRemoved(address indexed pairKey, address indexed user, uint256 amount0, uint256 amount1, uint256 lpAmount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PairCreated(address indexed token0, address indexed token1, address indexed lpToken, bytes32 pairKey)",
      "event ReputationAwarded(address indexed user, uint256 points, bytes32 indexed pairKey, bytes32 action)",
      "event Swap(address indexed pairKey, address indexed user, address indexed tokenIn, uint256 amountIn, uint256 amountOut)",
      "event Sync(address indexed pairKey, uint256 reserve0, uint256 reserve1)",
      "function FEE_DENOMINATOR() view returns (uint256)",
      "function LP_FEE() view returns (uint256)",
      "function OWNER_FEE() view returns (uint256)",
      "function TOTAL_FEE() view returns (uint256)",
      "function addLiquidity(address token0, address token1, uint256 amount0, uint256 amount1, address to) returns (uint256 lpAmount)",
      "function addSupportedTokens(address[] tokens)",
      "function allTokens(uint256) view returns (address)",
      "function createPair(address token0, address token1) returns (bytes32)",
      "function getAllTokens() view returns (address[])",
      "function getAmountIn(uint256 amountOut, address tokenIn, address tokenOut) view returns (uint256 amountIn)",
      "function getAmountOut(uint256 amountIn, address tokenIn, address tokenOut) view returns (uint256 amountOut)",
      "function getPair(bytes32 pairKey) view returns ((address token0, address token1, address lpToken, uint256 reserve0, uint256 reserve1, uint256 totalSupply, uint256 kLast))",
      "function getPairKey(address token0, address token1) pure returns (bytes32)",
      "function getReserves(address token0, address token1) view returns (uint256 reserve0, uint256 reserve1)",
      "function getUserFeeRate(address user) view returns (uint256)",
      "function owner() view returns (address)",
      "function ownerFeeAccumulated() view returns (uint256)",
      "function pairKeys(address, address) view returns (bytes32)",
      "function pairs(bytes32) view returns (address token0, address token1, address lpToken, uint256 reserve0, uint256 reserve1, uint256 totalSupply, uint256 kLast)",
      "function removeLiquidity(address token0, address token1, uint256 lpAmount, address to) returns (uint256 amount0, uint256 amount1)",
      "function renounceOwnership()",
      "function reputationContract() view returns (address)",
      "function setReputationContract(address _addr)",
      "function supportedTokens(address) view returns (bool)",
      "function swapExactTokensForTokens(address tokenIn, address tokenOut, uint256 amountIn, address to) returns (uint256 amountOut)",
      "function transferOwnership(address newOwner)",
      "function withdrawOwnerFees()",
      "receive() payable"
    ],
    "TikTakLP": [
      "constructor(string name, string symbol)",
      "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
      "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
      "error ERC20InvalidApprover(address approver)",
      "error ERC20InvalidReceiver(address receiver)",
      "error ERC20InvalidSender(address sender)",
      "error ERC20InvalidSpender(address spender)",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(address from, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function mint(address to, uint256 amount)",
      "function name() view returns (string)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function transferOwnership(address newOwner)"
    ]
  },
  "deployment": {
    "timestamp": "2025-10-13T21:48:06.655Z",
    "blockNumber": 27667215,
    "transactionHash": "0xf197542f2e5b19f6f4cdda0be47871143c97fd3e8b3e47f710017bf1c22f1381"
  },
  "tokenFactoryAddress": "0x52fCB8364F5D084F892898289a20ea4478b70814"
}